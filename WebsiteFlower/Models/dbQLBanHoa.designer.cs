#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebsiteFlower.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBANHOA")]
	public partial class dbQLBanHoaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertCTDONDAT(CTDONDAT instance);
    partial void UpdateCTDONDAT(CTDONDAT instance);
    partial void DeleteCTDONDAT(CTDONDAT instance);
    partial void InsertDONDAT(DONDAT instance);
    partial void UpdateDONDAT(DONDAT instance);
    partial void DeleteDONDAT(DONDAT instance);
    partial void InsertHOATUOI(HOATUOI instance);
    partial void UpdateHOATUOI(HOATUOI instance);
    partial void DeleteHOATUOI(HOATUOI instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKIEUHOA(KIEUHOA instance);
    partial void UpdateKIEUHOA(KIEUHOA instance);
    partial void DeleteKIEUHOA(KIEUHOA instance);
    partial void InsertLOAIHOA(LOAIHOA instance);
    partial void UpdateLOAIHOA(LOAIHOA instance);
    partial void DeleteLOAIHOA(LOAIHOA instance);
    partial void InsertMEAN(MEAN instance);
    partial void UpdateMEAN(MEAN instance);
    partial void DeleteMEAN(MEAN instance);
    partial void InsertNCC(NCC instance);
    partial void UpdateNCC(NCC instance);
    partial void DeleteNCC(NCC instance);
    #endregion
		
		public dbQLBanHoaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLBANHOAConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanHoaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanHoaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanHoaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanHoaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<CTDONDAT> CTDONDATs
		{
			get
			{
				return this.GetTable<CTDONDAT>();
			}
		}
		
		public System.Data.Linq.Table<DONDAT> DONDATs
		{
			get
			{
				return this.GetTable<DONDAT>();
			}
		}
		
		public System.Data.Linq.Table<HOATUOI> HOATUOIs
		{
			get
			{
				return this.GetTable<HOATUOI>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KIEUHOA> KIEUHOAs
		{
			get
			{
				return this.GetTable<KIEUHOA>();
			}
		}
		
		public System.Data.Linq.Table<LOAIHOA> LOAIHOAs
		{
			get
			{
				return this.GetTable<LOAIHOA>();
			}
		}
		
		public System.Data.Linq.Table<MEAN> MEANs
		{
			get
			{
				return this.GetTable<MEAN>();
			}
		}
		
		public System.Data.Linq.Table<NCC> NCCs
		{
			get
			{
				return this.GetTable<NCC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERADMIN;
		
		private string _PASSADMIN;
		
		private string _HOTEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERADMINChanging(string value);
    partial void OnUSERADMINChanged();
    partial void OnPASSADMINChanging(string value);
    partial void OnPASSADMINChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERADMIN", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERADMIN
		{
			get
			{
				return this._USERADMIN;
			}
			set
			{
				if ((this._USERADMIN != value))
				{
					this.OnUSERADMINChanging(value);
					this.SendPropertyChanging();
					this._USERADMIN = value;
					this.SendPropertyChanged("USERADMIN");
					this.OnUSERADMINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSADMIN", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PASSADMIN
		{
			get
			{
				return this._PASSADMIN;
			}
			set
			{
				if ((this._PASSADMIN != value))
				{
					this.OnPASSADMINChanging(value);
					this.SendPropertyChanging();
					this._PASSADMIN = value;
					this.SendPropertyChanged("PASSADMIN");
					this.OnPASSADMINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private System.Nullable<int> _MAHOA;
		
		private System.Nullable<int> _MAKIEU;
		
		private System.Nullable<int> _MALOAI;
		
		private string _TENSP;
		
		private System.Nullable<decimal> _GIABAN;
		
		private string _ANH;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private System.Nullable<int> _SLTON;
		
		private System.Nullable<int> _MANCC;
		
		private EntitySet<CTDONDAT> _CTDONDATs;
		
		private EntityRef<HOATUOI> _HOATUOI;
		
		private EntityRef<KIEUHOA> _KIEUHOA;
		
		private EntityRef<LOAIHOA> _LOAIHOA;
		
		private EntityRef<NCC> _NCC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMAHOAChanging(System.Nullable<int> value);
    partial void OnMAHOAChanged();
    partial void OnMAKIEUChanging(System.Nullable<int> value);
    partial void OnMAKIEUChanged();
    partial void OnMALOAIChanging(System.Nullable<int> value);
    partial void OnMALOAIChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnGIABANChanging(System.Nullable<decimal> value);
    partial void OnGIABANChanged();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    partial void OnSLTONChanging(System.Nullable<int> value);
    partial void OnSLTONChanged();
    partial void OnMANCCChanging(System.Nullable<int> value);
    partial void OnMANCCChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CTDONDATs = new EntitySet<CTDONDAT>(new Action<CTDONDAT>(this.attach_CTDONDATs), new Action<CTDONDAT>(this.detach_CTDONDATs));
			this._HOATUOI = default(EntityRef<HOATUOI>);
			this._KIEUHOA = default(EntityRef<KIEUHOA>);
			this._LOAIHOA = default(EntityRef<LOAIHOA>);
			this._NCC = default(EntityRef<NCC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOA", DbType="Int")]
		public System.Nullable<int> MAHOA
		{
			get
			{
				return this._MAHOA;
			}
			set
			{
				if ((this._MAHOA != value))
				{
					if (this._HOATUOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHOAChanging(value);
					this.SendPropertyChanging();
					this._MAHOA = value;
					this.SendPropertyChanged("MAHOA");
					this.OnMAHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKIEU", DbType="Int")]
		public System.Nullable<int> MAKIEU
		{
			get
			{
				return this._MAKIEU;
			}
			set
			{
				if ((this._MAKIEU != value))
				{
					if (this._KIEUHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKIEUChanging(value);
					this.SendPropertyChanging();
					this._MAKIEU = value;
					this.SendPropertyChanged("MAKIEU");
					this.OnMAKIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Int")]
		public System.Nullable<int> MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAIHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Decimal(15,0)")]
		public System.Nullable<decimal> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="VarChar(50)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTON", DbType="Int")]
		public System.Nullable<int> SLTON
		{
			get
			{
				return this._SLTON;
			}
			set
			{
				if ((this._SLTON != value))
				{
					this.OnSLTONChanging(value);
					this.SendPropertyChanging();
					this._SLTON = value;
					this.SendPropertyChanged("SLTON");
					this.OnSLTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Int")]
		public System.Nullable<int> MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NCC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTDONDAT", Storage="_CTDONDATs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CTDONDAT> CTDONDATs
		{
			get
			{
				return this._CTDONDATs;
			}
			set
			{
				this._CTDONDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOATUOI_SANPHAM", Storage="_HOATUOI", ThisKey="MAHOA", OtherKey="MAHOA", IsForeignKey=true)]
		public HOATUOI HOATUOI
		{
			get
			{
				return this._HOATUOI.Entity;
			}
			set
			{
				HOATUOI previousValue = this._HOATUOI.Entity;
				if (((previousValue != value) 
							|| (this._HOATUOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOATUOI.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HOATUOI.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MAHOA = value.MAHOA;
					}
					else
					{
						this._MAHOA = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOATUOI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KIEUHOA_SANPHAM", Storage="_KIEUHOA", ThisKey="MAKIEU", OtherKey="MAKIEU", IsForeignKey=true)]
		public KIEUHOA KIEUHOA
		{
			get
			{
				return this._KIEUHOA.Entity;
			}
			set
			{
				KIEUHOA previousValue = this._KIEUHOA.Entity;
				if (((previousValue != value) 
							|| (this._KIEUHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KIEUHOA.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._KIEUHOA.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MAKIEU = value.MAKIEU;
					}
					else
					{
						this._MAKIEU = default(Nullable<int>);
					}
					this.SendPropertyChanged("KIEUHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIHOA_SANPHAM", Storage="_LOAIHOA", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAIHOA LOAIHOA
		{
			get
			{
				return this._LOAIHOA.Entity;
			}
			set
			{
				LOAIHOA previousValue = this._LOAIHOA.Entity;
				if (((previousValue != value) 
							|| (this._LOAIHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIHOA.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAIHOA.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAIHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_SANPHAM", Storage="_NCC", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NCC NCC
		{
			get
			{
				return this._NCC.Entity;
			}
			set
			{
				NCC previousValue = this._NCC.Entity;
				if (((previousValue != value) 
							|| (this._NCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NCC.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NCC.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NCC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDONDATs(CTDONDAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CTDONDATs(CTDONDAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDONDAT")]
	public partial class CTDONDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADONDAT;
		
		private System.Nullable<int> _MASP;
		
		private System.Nullable<int> _SL;
		
		private System.Nullable<decimal> _DONGIA;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<DONDAT> _DONDAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADONDATChanging(int value);
    partial void OnMADONDATChanged();
    partial void OnMASPChanging(System.Nullable<int> value);
    partial void OnMASPChanged();
    partial void OnSLChanging(System.Nullable<int> value);
    partial void OnSLChanged();
    partial void OnDONGIAChanging(System.Nullable<decimal> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CTDONDAT()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._DONDAT = default(EntityRef<DONDAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADONDAT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADONDAT
		{
			get
			{
				return this._MADONDAT;
			}
			set
			{
				if ((this._MADONDAT != value))
				{
					if (this._DONDAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADONDATChanging(value);
					this.SendPropertyChanging();
					this._MADONDAT = value;
					this.SendPropertyChanged("MADONDAT");
					this.OnMADONDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int")]
		public System.Nullable<int> MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Decimal(15,0)")]
		public System.Nullable<decimal> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTDONDAT", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CTDONDATs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CTDONDATs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDAT_CTDONDAT", Storage="_DONDAT", ThisKey="MADONDAT", OtherKey="MADONDAT", IsForeignKey=true)]
		public DONDAT DONDAT
		{
			get
			{
				return this._DONDAT.Entity;
			}
			set
			{
				DONDAT previousValue = this._DONDAT.Entity;
				if (((previousValue != value) 
							|| (this._DONDAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONDAT.Entity = null;
						previousValue.CTDONDAT = null;
					}
					this._DONDAT.Entity = value;
					if ((value != null))
					{
						value.CTDONDAT = this;
						this._MADONDAT = value.MADONDAT;
					}
					else
					{
						this._MADONDAT = default(int);
					}
					this.SendPropertyChanged("DONDAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONDAT")]
	public partial class DONDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADONDAT;
		
		private System.Nullable<bool> _THANHTOAN;
		
		private System.Nullable<bool> _TINHTRANGGIAOHANG;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private System.Nullable<int> _MAKH;
		
		private EntityRef<CTDONDAT> _CTDONDAT;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADONDATChanging(int value);
    partial void OnMADONDATChanged();
    partial void OnTHANHTOANChanging(System.Nullable<bool> value);
    partial void OnTHANHTOANChanged();
    partial void OnTINHTRANGGIAOHANGChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGGIAOHANGChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    #endregion
		
		public DONDAT()
		{
			this._CTDONDAT = default(EntityRef<CTDONDAT>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADONDAT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADONDAT
		{
			get
			{
				return this._MADONDAT;
			}
			set
			{
				if ((this._MADONDAT != value))
				{
					this.OnMADONDATChanging(value);
					this.SendPropertyChanging();
					this._MADONDAT = value;
					this.SendPropertyChanged("MADONDAT");
					this.OnMADONDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTOAN", DbType="Bit")]
		public System.Nullable<bool> THANHTOAN
		{
			get
			{
				return this._THANHTOAN;
			}
			set
			{
				if ((this._THANHTOAN != value))
				{
					this.OnTHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._THANHTOAN = value;
					this.SendPropertyChanged("THANHTOAN");
					this.OnTHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANGGIAOHANG", DbType="Bit")]
		public System.Nullable<bool> TINHTRANGGIAOHANG
		{
			get
			{
				return this._TINHTRANGGIAOHANG;
			}
			set
			{
				if ((this._TINHTRANGGIAOHANG != value))
				{
					this.OnTINHTRANGGIAOHANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANGGIAOHANG = value;
					this.SendPropertyChanged("TINHTRANGGIAOHANG");
					this.OnTINHTRANGGIAOHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONDAT_CTDONDAT", Storage="_CTDONDAT", ThisKey="MADONDAT", OtherKey="MADONDAT", IsUnique=true, IsForeignKey=false)]
		public CTDONDAT CTDONDAT
		{
			get
			{
				return this._CTDONDAT.Entity;
			}
			set
			{
				CTDONDAT previousValue = this._CTDONDAT.Entity;
				if (((previousValue != value) 
							|| (this._CTDONDAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTDONDAT.Entity = null;
						previousValue.DONDAT = null;
					}
					this._CTDONDAT.Entity = value;
					if ((value != null))
					{
						value.DONDAT = this;
					}
					this.SendPropertyChanged("CTDONDAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDAT", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONDATs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONDATs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOATUOI")]
	public partial class HOATUOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHOA;
		
		private string _TENHOA;
		
		private System.Nullable<int> _MANCC;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntityRef<MEAN> _MEAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHOAChanging(int value);
    partial void OnMAHOAChanged();
    partial void OnTENHOAChanging(string value);
    partial void OnTENHOAChanged();
    partial void OnMANCCChanging(System.Nullable<int> value);
    partial void OnMANCCChanged();
    #endregion
		
		public HOATUOI()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._MEAN = default(EntityRef<MEAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHOA
		{
			get
			{
				return this._MAHOA;
			}
			set
			{
				if ((this._MAHOA != value))
				{
					this.OnMAHOAChanging(value);
					this.SendPropertyChanging();
					this._MAHOA = value;
					this.SendPropertyChanged("MAHOA");
					this.OnMAHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHOA", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENHOA
		{
			get
			{
				return this._TENHOA;
			}
			set
			{
				if ((this._TENHOA != value))
				{
					this.OnTENHOAChanging(value);
					this.SendPropertyChanging();
					this._TENHOA = value;
					this.SendPropertyChanged("TENHOA");
					this.OnTENHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Int")]
		public System.Nullable<int> MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOATUOI_SANPHAM", Storage="_SANPHAMs", ThisKey="MAHOA", OtherKey="MAHOA")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOATUOI_MEAN", Storage="_MEAN", ThisKey="MAHOA", OtherKey="MAHOA", IsUnique=true, IsForeignKey=false)]
		public MEAN MEAN
		{
			get
			{
				return this._MEAN.Entity;
			}
			set
			{
				MEAN previousValue = this._MEAN.Entity;
				if (((previousValue != value) 
							|| (this._MEAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEAN.Entity = null;
						previousValue.HOATUOI = null;
					}
					this._MEAN.Entity = value;
					if ((value != null))
					{
						value.HOATUOI = this;
					}
					this.SendPropertyChanged("MEAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HOATUOI = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HOATUOI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _HOTEN;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private string _EMAIL;
		
		private string _DIACHIKH;
		
		private string _DIENTHOAIKH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private EntitySet<DONDAT> _DONDATs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDIACHIKHChanging(string value);
    partial void OnDIACHIKHChanged();
    partial void OnDIENTHOAIKHChanging(string value);
    partial void OnDIENTHOAIKHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONDATs = new EntitySet<DONDAT>(new Action<DONDAT>(this.attach_DONDATs), new Action<DONDAT>(this.detach_DONDATs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="VarChar(50)")]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHIKH", DbType="NVarChar(200)")]
		public string DIACHIKH
		{
			get
			{
				return this._DIACHIKH;
			}
			set
			{
				if ((this._DIACHIKH != value))
				{
					this.OnDIACHIKHChanging(value);
					this.SendPropertyChanging();
					this._DIACHIKH = value;
					this.SendPropertyChanged("DIACHIKH");
					this.OnDIACHIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAIKH", DbType="VarChar(50)")]
		public string DIENTHOAIKH
		{
			get
			{
				return this._DIENTHOAIKH;
			}
			set
			{
				if ((this._DIENTHOAIKH != value))
				{
					this.OnDIENTHOAIKHChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAIKH = value;
					this.SendPropertyChanged("DIENTHOAIKH");
					this.OnDIENTHOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONDAT", Storage="_DONDATs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONDAT> DONDATs
		{
			get
			{
				return this._DONDATs;
			}
			set
			{
				this._DONDATs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDATs(DONDAT entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONDATs(DONDAT entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KIEUHOA")]
	public partial class KIEUHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKIEU;
		
		private string _KIEU;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKIEUChanging(int value);
    partial void OnMAKIEUChanged();
    partial void OnKIEUChanging(string value);
    partial void OnKIEUChanged();
    #endregion
		
		public KIEUHOA()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKIEU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKIEU
		{
			get
			{
				return this._MAKIEU;
			}
			set
			{
				if ((this._MAKIEU != value))
				{
					this.OnMAKIEUChanging(value);
					this.SendPropertyChanging();
					this._MAKIEU = value;
					this.SendPropertyChanged("MAKIEU");
					this.OnMAKIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KIEU", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KIEU
		{
			get
			{
				return this._KIEU;
			}
			set
			{
				if ((this._KIEU != value))
				{
					this.OnKIEUChanging(value);
					this.SendPropertyChanging();
					this._KIEU = value;
					this.SendPropertyChanged("KIEU");
					this.OnKIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KIEUHOA_SANPHAM", Storage="_SANPHAMs", ThisKey="MAKIEU", OtherKey="MAKIEU")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.KIEUHOA = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.KIEUHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIHOA")]
	public partial class LOAIHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAI;
		
		private string _TENLOAI;
		
		private System.Nullable<int> _MAKIEU;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(int value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    partial void OnMAKIEUChanging(System.Nullable<int> value);
    partial void OnMAKIEUChanged();
    #endregion
		
		public LOAIHOA()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKIEU", DbType="Int")]
		public System.Nullable<int> MAKIEU
		{
			get
			{
				return this._MAKIEU;
			}
			set
			{
				if ((this._MAKIEU != value))
				{
					this.OnMAKIEUChanging(value);
					this.SendPropertyChanging();
					this._MAKIEU = value;
					this.SendPropertyChanged("MAKIEU");
					this.OnMAKIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIHOA_SANPHAM", Storage="_SANPHAMs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIHOA = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEANS")]
	public partial class MEAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHOA;
		
		private string _TENHOA;
		
		private string _MEAN1;
		
		private EntityRef<HOATUOI> _HOATUOI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHOAChanging(int value);
    partial void OnMAHOAChanged();
    partial void OnTENHOAChanging(string value);
    partial void OnTENHOAChanged();
    partial void OnMEAN1Changing(string value);
    partial void OnMEAN1Changed();
    #endregion
		
		public MEAN()
		{
			this._HOATUOI = default(EntityRef<HOATUOI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHOA
		{
			get
			{
				return this._MAHOA;
			}
			set
			{
				if ((this._MAHOA != value))
				{
					if (this._HOATUOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHOAChanging(value);
					this.SendPropertyChanging();
					this._MAHOA = value;
					this.SendPropertyChanged("MAHOA");
					this.OnMAHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHOA", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENHOA
		{
			get
			{
				return this._TENHOA;
			}
			set
			{
				if ((this._TENHOA != value))
				{
					this.OnTENHOAChanging(value);
					this.SendPropertyChanging();
					this._TENHOA = value;
					this.SendPropertyChanged("TENHOA");
					this.OnTENHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEAN", Storage="_MEAN1", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string MEAN1
		{
			get
			{
				return this._MEAN1;
			}
			set
			{
				if ((this._MEAN1 != value))
				{
					this.OnMEAN1Changing(value);
					this.SendPropertyChanging();
					this._MEAN1 = value;
					this.SendPropertyChanged("MEAN1");
					this.OnMEAN1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOATUOI_MEAN", Storage="_HOATUOI", ThisKey="MAHOA", OtherKey="MAHOA", IsForeignKey=true)]
		public HOATUOI HOATUOI
		{
			get
			{
				return this._HOATUOI.Entity;
			}
			set
			{
				HOATUOI previousValue = this._HOATUOI.Entity;
				if (((previousValue != value) 
							|| (this._HOATUOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOATUOI.Entity = null;
						previousValue.MEAN = null;
					}
					this._HOATUOI.Entity = value;
					if ((value != null))
					{
						value.MEAN = this;
						this._MAHOA = value.MAHOA;
					}
					else
					{
						this._MAHOA = default(int);
					}
					this.SendPropertyChanged("HOATUOI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCC")]
	public partial class NCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANCC;
		
		private string _TENNCC;
		
		private string _DIENTHOAI;
		
		private string _DIACHI;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(int value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnDIENTHOAIChanging(string value);
    partial void OnDIENTHOAIChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public NCC()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI", DbType="VarChar(50)")]
		public string DIENTHOAI
		{
			get
			{
				return this._DIENTHOAI;
			}
			set
			{
				if ((this._DIENTHOAI != value))
				{
					this.OnDIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI = value;
					this.SendPropertyChanged("DIENTHOAI");
					this.OnDIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_SANPHAM", Storage="_SANPHAMs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NCC = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NCC = null;
		}
	}
}
#pragma warning restore 1591
